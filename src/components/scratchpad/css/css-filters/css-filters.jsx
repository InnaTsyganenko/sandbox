import React from 'react';

function CSSFilters() {

  return (
    <section className="conspect">
      <h1>CSS-фильтры</h1>
      <h2>Яркость и контрастность, brightness и contrast</h2>
      <p>CSS-фильтры позволяют применить визуальные эффекты к элементам страницы. Фильтры обычно применяют к изображениям, фонам или рамкам, а иногда и к другим элементам.</p>
      <p>Фильтры применяются к элементу до того, как он будет отображён, поэтому количество фильтров влияет на скорость загрузки страницы. Фильтры задаются с помощью свойства filter.</p>
      <p>Яркость — brightness. Допустимы числовые значения от 0 и выше или проценты. Со значением фильтра 1 или 100% элемент отображается без изменений.</p>
      <pre>{`.effect {
  filter: brightness(2); /* увеличивает яркость вдвое */
  filter: brightness(10%); /* снижает яркость до 10% */
  filter: brightness(150%); /* увеличивает яркость на 50% */
}`}
      </pre>
      <p>Контрастность — contrast. Как и у фильтра яркости в качестве значения можно использовать числа или проценты.</p>
      <pre>{`.effect {
  filter: contrast(0.5); /* снижает контрастность наполовину */
  filter: contrast(50%); /* тоже снижает контрастность до 50% */
 }`}
      </pre>

      <h2>Бесцветность и сепия, grayscale и sepia</h2>
      <p>Следующие два фильтра исторически относятся к фотографии: изначально фотографии были чёрно-белые или коричневатого оттенка краски сепии. С помощью фильтров бесцветности и сепии фотографиям можно придать эффект «старины».</p>
      <p>Бесцветность — grayscale. Допустимы числовые значения от 0 до 1 и процентные значения от 0% до 100%. При значениях 0 или 0% элемент отображается без изменений.</p>
      <pre>{`.effect {
  filter: grayscale(1); /* полное обесцвечивание */
  filter: grayscale(50%); /* обесцвечивание наполовину */
  filter: sepia(1); /* полный эффект сепии */
  filter: sepia(25%); /* эффект сепии применяется на 25% */
}`}
      </pre>

      <h2>Инверсия и насыщенность, invert и saturate</h2>
      <p>Ещё два фильтра для цветовых эффектов — инверсия цвета и цветовая насыщенность. Как понятно из названия, при инверсии цвета меняются на противоположные, и мы получаем «негатив» картинки, а цветовая насыщенность делает краски ярче и противоположна по смыслу фильтру обесцвечивания.</p>
      <p>Инверсия цвета — invert. Допустимые простые числовые значения от 0 до 1 и процентные значения от 0% до 100%.</p>
      <p>Цветовая насыщенность — saturate. Допустимые простые числовые значения от 0 и выше и процентные значения от 0% и выше. При значении фильтра 1 или 100% элемент отображается без изменений. Если установить нулевое значение, то картинка обесцветится, как при использовании фильтра grayscale.</p>
      <pre>{`.effect {
  filter: invert(1); /* полная инверсия цвета */
  filter: invert(50%); /* инверсия цвета наполовину, все цвета серые */
  filter: saturate(2); /* цвета ярче вдвое */
  filter: saturate(50%); /* цвета вдвое бледнее */
  filter: saturate(0); /* обесцвеченная картинка */
}`}
      </pre>

      <h2>Поворот цвета, hue-rotate</h2>
      <p>Если представить все цвета в виде круга, то этим фильтром можно повернуть цвет картинки вдоль круга на определённый угол.</p>
      <p>Значение задаётся в градусах от 0deg до 360deg. Допускается также использование отрицательного угла. Положительное значение будет вращать цвет по часовой стрелке, а отрицательное — против. При значении фильтра 0deg элемент отображается без изменений.</p>

      <h2>Размытость и непрозрачность, blur и opacity</h2>
      <p>Не все фильтры работают с цветом. Например, фильтр размытости создаёт у фотографии эффект расфокусировки, а фильтр непрозрачности может сделать объект частично прозрачным.</p>
      <p>Фильтр blur задаёт размытость объекта. Его значение задаётся в пикселях от 0px и выше.</p>
      <p>Фильтр opacity задаёт уровень непрозрачности объекта. Работает точно так же, как свойство opacity. Допустимые значения от 0 до 1 или от 0% до 100%.</p>
      <div className="note">Между фильтром и свойством opacity всё же есть «невидимое» отличие. Некоторые браузеры используют аппаратное ускорение для отрисовки фильтров, а для свойства opacity ускорение не используется. Поэтому применение фильтра opacity может существенно улучшить производительность по сравнению с аналогичным свойством.</div>

      <h2>Тень объекта, drop-shadow</h2>
      <p>Синтаксис фильтра такой же, как и у свойства box-shadow.</p>
      <div className="warn">В отличие от box-shadow фильтр тени не поддерживает параметр inset для внутренней тени.</div>
      <p>Фильтр тени имеет преимущества перед свойством box-shadow.</p>
      <p>Во-первых, при отрисовке в браузере фильтра drop-shadow используется аппаратное ускорение, что улучшает производительность. А дополнительного ускорения при использовании свойства box-shadow в браузере нет.</p>
      <p>Во-вторых, фильтр drop-shadow применяется к непрозрачному контуру картинок, а прозрачные области игнорируются, в то время как box-shadow задает прямоугольную тень по границе всего изображения.</p>
      <p>На примере полупрозрачной PNG-картинки можно оценить, как работают эти два свойства. Но стоит задать такой картинке непрозрачный фон, как поведение фильтра изменится.</p>
      <p>Нужно заметить, что фильтры пришли в CSS из SVG, поэтому drop-shadow и box-shadow различаются в реализации. То есть с одними и теми же параметрами тени будут выглядеть по-разному.</p>

      <h2>Применение CSS-фильтров к тексту</h2>
      <p>Фильтры можно применять без ограничений не только к картинкам, но и к другим HTML-элементам.</p>

      <h3>Комбинация фильтров</h3>
      <p>К одному и тому же блоку можно применить несколько фильтров одновременно. Для этого все фильтры просто перечисляются через пробел после слова filter:</p>
      <pre>{`.effect {
  filter: sepia(50%);
  filter: sepia(50%) blur(5px);
  filter: sepia(50%) blur(5px) opacity(50%);
}`}
      </pre>
      <p><span className="hl-4">Стоит помнить, что перечисление фильтров в разном порядке даёт разный результат. Это так, потому что каждый следующий фильтр применяется уже к изображению с эффектом.</span></p>

      <h2>Комбинация фильтров drop-shadow</h2>
      <p>Если применить несколько фильтров drop-shadow к одному блоку, то их комбинация даст интересный эффект. Так как каждый следующий фильтр в комбинации применяется к изображению с предыдущими фильтрами, то ещё одна тень у блока с тенью создаст двойную тень.</p>
      <pre>{`.effect {
  /* обычная тень */
  filter: drop-shadow(0px 0px 0px black);

  /* двойная тень */
  filter: drop-shadow(0px 0px 0px black) drop-shadow(0px 0px 0px black);
}`}
      </pre>
      <p>В этом ещё одно отличие фильтра drop-shadow от свойства box-shadow.</p>
      <p>Кстати, фильтр drop-shadow бывает полезно применять не только к изображениям, но и к обычным элементам. Тень будет, как и в случае с картинками, идти по непрозрачному контуру. В область тени включаются также псевдоэлементы блока.</p>

      <h2>Анимация CSS-фильтров</h2>
      <p>К CSS-фильтрам можно применять анимации и плавные переходы.</p>
      <p>Например, очень оригинальный эффект получится, если применить бесконечную анимацию к фильтру поворота цвета hue-rotate на цветной фотографии.</p>

      <h2>Плавные переходы и CSS-фильтры</h2>
      <p>Теперь рассмотрим применение к фильтрам плавных переходов.</p>
      <p>К примеру, можно фильтрами сделать фотографию чёрно-белой и размытой, по наведению убрать эффект фильтра, а само визуальное изменение сделать плавным.</p>
      <p>Кстати, у свойства filter значение по умолчанию — none. Воспользуемся им для отмены эффекта фильтра по наведению на фотографию.</p>
    </section>
  );
}
export default CSSFilters;
