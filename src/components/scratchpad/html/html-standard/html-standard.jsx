import React from 'react';

function HtmlStandard() {

  return (
    <section className="conspect">
      <h1>Как работать со спецификацией</h1>
      <p>Все сайты работаю по <i>живому стандарту</i>: <a className="text-link" href="https://html.spec.whatwg.org/multipage/" target="blank">HTML Living Standard</a>. <span className="hl-1"><i>Стандарт лучше открывать в режиме multipage, так как режим onepage перегружает браузер. Также можно скачать pdf.</i></span></p>
      <p>Важные для верстальщиков разделы спецификации:</p>
      <p>3. Semantics, structure, and APIs of HTML documents - о глобальных вещах, структуре документа, типах контента, глобальных атрибутах и так далее.</p>
      <p>4. The elements of HTML, в котором содержится информация о конкретных тегах - как теги можно вкладывать друг в друга и что обозначает каждый тег.</p>
      <p>Из всего многообразия метаданных нас интересуют эти поля:</p>
      <ul>
        <li>Categories — здесь перечислены категории, или типы тегов, к которым этот тег относится.</li>
        <li>Contexts in which this element can be used — в каких областях на сайте может применяться тег.</li>
        <li>Content model — модель содержимого. Описывает, какое содержимое может быть внутри этого тега.</li>
        <li>Contents attributes — важное для нас поле. Оно говорит, какие атрибуты могут быть у этого тега.</li>
      </ul>
      <p>Остальные поля метаданных нас интересуют меньше, а часть этих полей вообще вспомогательные, например:</p>
      <ul>
        <li>Tag Omission — показывает, когда тег можно не закрывать. Но настоящий верстальщик-профессионал теги закрывает.</li>
        <li>Есть ещё поля, которые нужны в большей степени для JavaScript. На эти поля мы пока не будем обращать внимания.</li>
      </ul>
      <p>Основных категорий семь. При изучении категории главное понять, что каждая из категорий обозначает и как эти категории соотносятся друг с другом. Давайте взглянем на диаграмму категорий.</p>
      <img src="/img/tag-categories.png" alt="Категории тэгов" />
      <p>Существует два основных типа тегов: теги Flow — поточные, и теги, которые относятся к метаданным — Metadata. Metadata — это всё, что может находиться в теге head — дополнительная информация, которая может влиять на всю страницу - &lsaquo;meta&rsaquo;, &lsaquo;link&rsaquo;, &lsaquo;title&rsaquo;, &lsaquo;script&rsaquo;, &lsaquo;style&rsaquo;.</p>
      <p>Flow — это всё то, что находится внутри body. То есть, всё, что мы можем своими глазами увидеть — содержимое страницы. Metadata немного пересекается с Flow, потому что некоторые теги из Metadata мы можем вставлять внутрь body, в частности, теги &lsaquo;style&rsaquo;, &lsaquo;script&rsaquo; и так далее.</p>
      <p>Внутри Flow выделяют подкатегории:</p>
      <ul>
        <li>Heading content — самая простая подкатегория, заголовочные теги: h1, h2, h3 и так далее.</li>
        <li>Sectioning content — теги, предназначенные для создания крупных смысловых разделов на странице: article, aside, nav, section.</li>
        <li>Phrasing content — фразовые теги, небольшие слова или словосочетания, что-то мелкое: a, em, i, span и так далее.</li>
      </ul>
      <p>Есть теги, у которых одна категория, а есть теги, которые относятся сразу к нескольким категориям или ни к одной из них. Например, тег div не попадает ни в Heading, ни в Sectioning, ни в Phrasing content, а является просто Flow Content. С другой стороны, тег h1 относится одновременно и к Heading, и к Flow Content. И это достаточно логично, ведь Heading Content является подкатегорией Flow Content.</p>
      <p>Embedded content — встраиваемый контент, подмножество Phrasing content. Это вещи, которые не являются частью языка HTML, но их надо отрисовать на странице – &lsaquo;img&rsaquo;, &lsaquo;object&rsaquo;, &lsaquo;iframe&rsaquo;, &lsaquo;audio&rsaquo;, &lsaquo;canvas&rsaquo;(холст, на котором можно рисовать с помощью JavaScript).</p>
      <p>Interactive content — интерактивный контент, с которым можно как-то взаимодействовать. Например: &lsaquo;video&rsaquo;, &lsaquo;a&rsaquo;, &lsaquo;button&rsaquo;. Некоторые элементы могут быть в каких-то состояниях интерактивными, а в каких-то нет. Например, с обычным видео можно взаимодействовать, оно интерактивное, но если у видео убрать атрибут control, то у него исчезнут элементы управления, и этот элемент станет неинтерактивным. Подобные неинтерактивные видео часто используются в качестве фона.</p>

      <h2>Вкладывание тегов</h2>
      <div className="note">Чтобы определить, можно ли один тег вложить в другой, нужно проанализировать раздел Categories у вкладываемого тега и раздел Content model у тега, в который вкладываем.</div>
      <p>Есть путь проще - посмотреть на специальном сервисе - <a href="https://caninclude.glitch.me/" target="_blank" rel="noopener noreferrer">Can I Include</a></p>
      <p>Прозрачная модель контента — когда модель содержимого элемента совпадает с моделью содержимого родительского тега. В нашем случае необходимо дополнительно проанализировать поле Content model у родительского, по отношению к a, тега. В случае, когда тег a вложен в p, нельзя вкладывать h1 в a.</p>
    </section>
  );
}
export default HtmlStandard;
