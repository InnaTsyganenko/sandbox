import React from 'react';

function SiteChecklist() {

  return (
    <section className="conspect">
      <h1>Чек-лист сайта</h1>
      <p>
        <input type="checkbox" id={1} className="checkbox" />
        <label htmlFor={1}>Фавиконка установлена.</label>
      </p>
      <p>
        <input type="checkbox" id={2} className="checkbox" />
        <label htmlFor={2}>Выполнена HTML-разметка всех страниц и всех элементов на страницах.</label>
      </p>
      <p>
        <input type="checkbox" id={50} className="checkbox" />
        <label htmlFor={50}>Грубые ошибки в разметке отсутствуют.</label>
      </p>
      <p>Грубые ошибки:</p>
      <ol>
        <li>Ссылки сделаны не тегом &lt;a&gt;, а другими тегами.</li>
        <li>Использование элементов со строчным боксом по умолчанию для создания крупных (сеточных) блоков.</li>
        <li>Использование тегов со строчным боксом по умолчанию для построения сетки недопустимо. Для построения сетки должны использоваться элементы с блочным боксом по умолчанию.</li>
        <li>Абзацы сделаны не тегами &lt;p&gt;, а &lt;br&gt;&lt;br&gt;. Не путайте эту ситуацию с использованием &lt;br&gt; внутри абзацев для разбиения текста на строки, например, внутри адресов.</li>
        <li>Теги &lt;input&gt; использованы без тега &lt;form&gt;.</li>
        <li>Отсутствие семантических тегов &lt;header&gt;, &lt;footer&gt;, &lt;section&gt; и других;</li>
      </ol>
      <p>
        <input type="checkbox" id={3} className="checkbox" />
        <label htmlFor={3}>Все стили проекта написаны и подключены в одном файле. Исключением является файл normalize.css и стили с Google Fonts.</label>
      </p>
      <p>
        <input type="checkbox" id={4} className="checkbox" />
        <label htmlFor={4}>Стилевой файл подключён внутри &lt;head&gt;</label>
      </p>
      <p>
        <input type="checkbox" id={5} className="checkbox" />
        <label htmlFor={5}>Документ проходит проверку на валидность. Ошибками не стоит считать замечания, помеченные валидатором как warning.</label>
      </p>
      <p>
        <input type="checkbox" id={6} className="checkbox" />
        <label htmlFor={6}>Раскладка блоков на странице сделана на флексах и гридах.</label>
      </p>
      <p>Гриды используются для основных структурных блоков страницы (шапка, главный контент, подвал) и для создания колонок в контенте страниц.</p>
      <p>Для остальной раскладки используются флексы: навигация, карточки, пагинация, хлебные крошки и другие.</p>
      <p>
        <input type="checkbox" id={7} className="checkbox" />
        <label htmlFor={7}>В CSS отсутствует !important.</label>
      </p>
      <p>Допускается использование !important при обосновании его необходимости в комментарии. Если без использования !important не обойтись или использование осознанно, то это не ошибка.</p>
      <p>
        <input type="checkbox" id={8} className="checkbox" />
        <label htmlFor={8}>Подключены правильные шрифты, их размеры, высота строк, цвет и толщина равны соответствующим параметрам в макетах и техническом задании.</label>
        Текст отображается не кракозябрами (в 2020 такое редко, но бывает).
      </p>
      <p className="hl-7">Примечание: Если в макете высота строки для однострочного текста указана без учёта появления второй строки (например, для создания отступа), то следовать параметрам макета буквально не нужно. Высоту строки нужно оставить унаследованную от глобальных стилей, а отступ сделать с помощью margin или padding, в зависимости от ситуации.</p>
      <p>При подключении шрифтов с Google Fonts, если в проекте используются несколько разных шрифтов, их нужно подключать с помощью одной ссылки.</p>
      <p>При локальном подключении шрифтов необходимо использовать два формата — WOFF2 и WOFF.</p>
      <p>
        <input type="checkbox" id={9} className="checkbox" />
        <label htmlFor={9}>Указаны альтернативные варианты шрифта и тип семейства в конце перечисления font-family.</label>
      </p>
      <p>Альтернативный веб-безопасный шрифт и тип семейства необходимо указывать для того, чтобы в случае отсутствия основного шрифта изменения внешнего вида шрифтов на странице были минимальны.</p>
      <p>Порядок шрифтов следующий:</p>
      <ul>
        <li>Основной шрифт;</li>
        <li>Веб-безопасный;</li>
        <li>Тип шрифта.</li>
      </ul>
      <p>Список веб-безопасных шрифтов можно посмотреть здесь: <a href="http://www.cssfontstack.com/" target="_blank" rel="noopener noreferrer">http://www.cssfontstack.com/</a>.</p>
      <p>Важно: альтернативный веб-безопасный шрифт должен быть такого же типа, что и основной, но подбирать максимально похожий шрифт не нужно.</p>
      <p>
        <input type="checkbox" id={10} className="checkbox" />
        <label htmlFor={10}>При наполнении контентом (как в макете) элементы каждой страницы соответствуют макету. Элементы страницы расположены как на макете на всех устройствах.</label>
      </p>
      <p>Допускаются:</p>
      <ul>
        <li>Различия в 5 пикселей по высоте (при расстояниях более 30 пикселей) и 2 пикселя по ширине;</li>
        <li>Различия в отображении шрифтов, связанные со сглаживанием на различных платформах.</li>
        <li>Рекомендуем проверять с помощью инструмента PerfectPixel (работает в Chrome, Firefox).</li>
      </ul>
      <p>
        <input type="checkbox" id={11} className="checkbox" />
        <label htmlFor={11}>Вёрстка идентично отображается и работает в последних версиях браузеров Chrome, Firefox, Safari(PerfectPixel).</label>
      </p>
      <p>При проверке этого критерия, необходимо смотреть на размеры и расположение блоков, внешнее сходство с макетом. Проверять работу анимации, если такая имеется. Допускаются небольшие отличия в отображениях шрифтов.</p>
      <p>
        <input type="checkbox" id={12} className="checkbox" />
        <label htmlFor={12}>Сайт нормально смотрится на минимальном для макета разрешении.</label>
      </p>
      <p>Важно: в ширину вьюпорта не входит полоса прокрутки.</p>
      <p>При большем размере экрана макет должен оставаться по центру и не иметь горизонтального скролла. На разрешениях экрана меньше ширины контейнера вёрстка не должна менять свою структуру.</p>
      <p>Критерий рассматривает поведение страницы при размере экрана большим или меньшим, чем ширина основного контейнера страницы.</p>
      <p>
        <input type="checkbox" id={13} className="checkbox" />
        <label htmlFor={13}>В корне документа имеются папки css, img, js или аналогичные. Главная страница имеет название index.html. В названиях и расширениях файлов нет заглавных букв и пробелов, использованы только латинские символы.</label>
      </p>
      <p>
        <input type="checkbox" id={14} className="checkbox" />
        <label htmlFor={14}>Отсутствует транслит в названиях классов, атрибутах и так далее.</label>
      </p>
      <p>
        <input type="checkbox" id={15} className="checkbox" />
        <label htmlFor={15}>Единообразное написание и форматирование кода в HTML, CSS и JavaScript</label>
      </p>
      <ul>
        <li>используется один тип кавычек: в одном языке (HTML, CSS или JS) должны использоваться только кавычки определённого типа (двойные или одинарные). Однако между языками тип кавычек может отличаться;</li>
        <li>если размер отступа в два пробела, то таким он должен быть везде;</li>
        <li>если для отступов используются табы или пробелы, то для всех отступов должны быть либо табы, либо пробелы;</li>
        <li>названия классов должны быть оформлены единообразно.</li>
      </ul>
      <p className="hl-1">Важно: этот критерий учитывает именно единообразие, а не стиль написания и форматирования кода.</p>
      <p>
        <input type="checkbox" id={16} className="checkbox" />
        <label htmlFor={16}>Выбран подходящий формат изображений</label>
      </p>
      <ul>
        <li>JPEG для фотографий;</li>
        <li>SVG для векторных изображений;</li>
        <li>PNG для всех прочих.</li>
      </ul>
      <p>
        <input type="checkbox" id={17} className="checkbox" />
        <label htmlFor={17}>Проект соответствует техническому заданию</label>
      </p>
      <p>Обратите внимание, что:</p>
      <ul>
        <li>должна быть сделана вёрстка всех модальных окон, реализация открытия необязательна;</li>
        <li>должна быть сделана разметка всех слайдов, оживление слайдеров необязательно.</li>
      </ul>
      <p>При конфликте технического задания и критериев, считать техническое задание более приоритетным.</p>
      <p>
        <input type="checkbox" id={18} className="checkbox" />
        <label htmlFor={18}>У всех изображений в теге &lt;img&gt; прописан размер.</label>
      </p>
      <p>Должны быть указаны действительные размеры картинок без указания единиц измерения.</p>
      <p>
        <input type="checkbox" id={19} className="checkbox" />
        <label htmlFor={19}>Использовано минимально возможное количество HTML-элементов (нет лишних элементов). Не должно быть лишних обёрток и блоков, которые используются для оформления и могут быть заменены на псевдоэлементы.</label>
      </p>
      <p>
        <input type="checkbox" id={20} className="checkbox" />
        <label htmlFor={20}>Все скрипты подключены непосредственно перед &lt;/body&gt;.</label>
      </p>
      <p>Подключение скриптов в самом низу страницы необходимо для того, чтобы загружающийся скрипт не блокировал содержимое страницы.</p>
      <p>Если JavaScript-код вставлен напрямую в HTML-файле в теге script, то критерий считается невыполненным. Это относится и к скриптам инициализации интерактивной карты (то есть используется не iframe, а Google Maps JavaScript API).</p>
      <p>
        <input type="checkbox" id={21} className="checkbox" />
        <label htmlFor={21}>Названия полей форм привязаны к своим полям с помощью &lt;label&gt;</label>
      </p>
      <p>Формы — кладезь пользовательских данных и одновременно потенциальный источник уязвимостей. Формы должны быть удобными для пользователя и безопасными для сайта.
      </p>
      <p>Что проверять:</p>
      <ul>
        <li>Обязательные поля подписаны.</li>
        <li>Если данные должны быть записаны в базу, проверяем это.</li>
        <li>Выводятся понятные сообщения об ошибках заполнения.</li>
        <li>Проверяем экранирование символов в формах на уровне клиента и сервера.</li>
        <li>Приходят подтверждающие письма (если так задумано).</li>
      </ul>
      <p />
      <p />
      <p>
        <input type="checkbox" id={22} className="checkbox" />
        <label htmlFor={22}>Телефоны размечены ссылками с протоколом tel.</label>
      </p>
      <p>Мобильные и десктопные браузеры вызывают системные приложения для звонков (сотовый звонок, Skype, Facetime и другие) при клике по ссылке с протоколом tel, по аналогии с протоколом mailto, который открывает почтовый клиент.</p>
      <p>
        <input type="checkbox" id={23} className="checkbox" />
        <label htmlFor={23}>Использован normalize.css, подключается отдельным файлом перед основным файлом стилей.</label>
      </p>
      <p>
        <input type="checkbox" id={24} className="checkbox" />
        <label htmlFor={24}>Для стилизации не использованы #id.</label>
      </p>
      <p>
        <input type="checkbox" id={25} className="checkbox" />
        <label htmlFor={25}>Нет вложенности селекторов больше двух.</label>
      </p>
      <p>Длинные цепочки селекторов усложняют код и его поддержку. Хорошим подходом считается использовать вложенность не больше двух уровней. Псевдоэлементы и псевдоклассы вложенность не увеличивают.</p>
      <p>Псевдоэлементы, псевдоклассы, селекторы с использованием + и ~ не увеличивают уровень вложенности, но усложняют цепочку селектора. Используйте их в исключительных случаях, например, для оформления состояний чекбоксов.</p>
      <p><span className="hl-9">Важно: допускается использовать селекторы с вложенностью больше двух при оживлении слайдеров на чистом CSS.</span></p>
      <p>
        <input type="checkbox" id={26} className="checkbox" />
        <label htmlFor={26}>Явно указано подходящее vertical-align для потоковых блоков с display: inline-block.</label>
      </p>
      <p>По умолчанию элементы inline-block имеют выравнивание baseline, которое может приводить к нежелательному поведению элементов, например, когда внутри них разное количество строк.</p>
      <p>
        <input type="checkbox" id={27} className="checkbox" />
        <label htmlFor={27}>Для CSS-свойств с префиксом указан его вариант без префикса, и это указание идёт последним.</label>
      </p>
      <p>Префиксы нужны либо для расширения совместимости кода со старыми браузерами, либо для использования нестабильных возможностей. Свойство без префикса указывается либо для современных браузеров, которе уже отбросили префиксы, либо для будущих браузеров.</p>
      <p>Свойства без префикса обязательно должны идти после соответствующих свойств с префиксами. Иначе браузер, поддерживающий обе версии свойства, может использовать устаревшую реализацию.</p>
      <p>
        <input type="checkbox" id={28} className="checkbox" />
        <label htmlFor={28}>Для блока, у которого есть фоновое изображение, прописан фоновый цвет, который соответствует преобладающему цвету изображения (пока изображение не загружено, страница выглядит похоже на макет).</label>
      </p>
      <p>
        <input type="checkbox" id={29} className="checkbox" />
        <label htmlFor={29}>Все состояния элементов (смотрите стайлгайд) прописаны в стилевом файле.</label>
      </p>
      <p>В соответствии со стайлгайдом, который присутствует в каждом проекте, все указанные в нём элементы должны иметь соответствующие эффекты при наведении и нажатии. Должны присутствовать все активные состояния, а для чекбоксов и радио кнопок прописаны состояния disabled.</p>
      <p>
        <input type="checkbox" id={30} className="checkbox" />
        <label htmlFor={30}>Стилизация нестандартных элементов форм. Нестандартные элементы форм (чекбоксы, радиокнопки, выпадающие списки) должны быть реализованы без использования JavaScript. При реализации нестандартного выпадающего списка стилизуется всё, кроме выпадающего списка. В том числе стилизовать нужно и стрелочку для &lt;select&gt;..</label>
      </p>
      <p>
        <input type="checkbox" id={31} className="checkbox" />
        <label htmlFor={31}>Файл стилей представлен в двух вариантах: с форматированием и минимизированный, к странице подключён минимизированный.</label>
      </p>
      <p>
        <input type="checkbox" id={32} className="checkbox" />
        <label htmlFor={32}>Нет глобальных стилей тегов</label>
      </p><p>Исключения:</p>
      <ul>
        <li>Normalize.css, который исправляет браузерные умолчания</li>
        <li>Уникальные теги документа: &lt;⁠⁠⁠⁠html&gt;, &lt;body&gt;</li>
        <li>Дополнительная нормализация: &lt;a&gt;⁠⁠⁠⁠ и &lt;⁠⁠⁠⁠img&gt;.</li>
      </ul>
      <p />
      <p>
        <input type="checkbox" id={33} className="checkbox" />
        <label htmlFor={33}>Цвета из макета вынесены в кастомные свойства.</label>
      </p>
      <p>Цвета, взятые из макета, вынесены в кастомные свойства корневого элемента :root в начале файла стилей и используются в коде вместо самих цветов:</p>
      <pre>{`:root {
  --basic-black: #000000;
  --basic-extra-dark: #242424;
  --basic-dark: #aba9a7;
  --basic-neutral: #e5e5e5;
  --basic-extra-light: #f8f5f2;
  --basic-white: #ffffff;

  --special: #663d15;
}

body {
  color: var(--basic-white);
}`}
      </pre>
      <p>
        <input type="checkbox" id={34} className="checkbox" />
        <label htmlFor={34}>Все JavaScript-скрипты работают корректно. Кнопки нажимаются и после этого что-то происходит, слайдеры крутятся, гамбургеры раскрываются.</label>
      </p>
      <p>
        <input type="checkbox" id={35} className="checkbox" />
        <label htmlFor={35}>JavaScript-файл представлен в двух вариантах: с форматированием и минимизированный, к странице подключён минимизированный.</label>
      </p>
      <p>
        <input type="checkbox" id={36} className="checkbox" />
        <label htmlFor={36}>Добавлена интерактивная карта (допускается подключение с помощью &lt;iframe&gt;).</label>
      </p>
      <p>
        <input type="checkbox" id={37} className="checkbox" />
        <label htmlFor={37}>Вёрстка проходит тест на переполнение контентом.</label>
      </p>
      <ul>
        <li>Не ломается при добавлении в элементы большего количества текста;</li>
        <li>Не ломается при добавлении в кнопки большего количества текста;</li>
        <li>Не ломается при использовании картинок с неподходящими размерами;</li>
        <li>Не ломается при изменении количества потоковых блоков;</li>
        <li>Текст не выпадает из блоков, нижерасположенные блоки не скрываются, смещение блоков в потоке сохраняет логику потока (не приводит к нарушению сетки).</li>
      </ul>
      <p />
      <p>
        <input type="checkbox" id={38} className="checkbox" />
        <label htmlFor={38}>У интерактивных элементов при нажатии или фокусе с клавиатуры есть активное состояние.</label>
      </p>
      <p>Активное состояние интерактивных элементов при нажатии или фокусе с клавиатуры должно оставаться либо встроенным браузерным, либо быть равноценно переназначено. В таком случае по интерактивным элементам сайта можно передвигаться с клавиатуры клавишей Tab и видеть каждый текущий элемент в активном состоянии.</p>
      <p>Допускается делать недоступные для скринридеров элементы, если равносильная функциональность или контент уже доступны. Например, если есть ссылка на страницу авторизации, модальное окно можно спрятать с помощью display: none или если есть простое поле для ввода даты, вспомогательный попап с календарём тоже можно спрятать недоступно. Однако интерактивные элементы и контент по-прежнему должны быть доступны с клавиатуры.</p>
      <p>
        <input type="checkbox" id={39} className="checkbox" />
        <label htmlFor={39}>Все интерактивные элементы имеют текстовое описание</label>
      </p>
      <p>Интерактивные элементы, представленные на макете только графически, без текста, содержат текстовое описание. Это поможет пользователям понять что именно произойдёт в результате взаимодействия, в случае если они не видят элементы интерфейса. Это описание будет озвучено скринридером.</p>
      <p>К интерактивным элементам относятся все элементы страницы, с которыми пользователь взаимодействует: кликом, наведением, фокусом, кнопками клавиатуры. Например: ссылки, кнопки, поля ввода и другие элементы форм.</p>
      <p>Описание можно добавить с помощью скрытых HTML-элементов, либо с помощью специальных атрибутов aria-label. Обратите внимание: атрибут placeholder не предназначен для описания полей ввода, он приводит пример заполнения данных. В этом случае, предподчтительнее будет добавить скрытый связанный элемент &lt;label&gt; с описанием поля.</p>
      <p>
        <input type="checkbox" id={40} className="checkbox" />
        <label htmlFor={40}>У контентных изображений в &lt;img&gt; заполнен alt.</label>
      </p>
      <p>Атрибут alt даёт альтернативное описание изображения для скринридеров и поисковиков. Правильное описание картинки добавляет смысл и ценность появления этой картинки для пользователя.</p>
      <pre>{'<img src="keks.jpg" alt="Фотография рыжего кота">'}</pre>
      <p>Простое копирование названия товара или ближайшего заголовка в alt дублирует уже существующую информацию и не описывает картинку. Например, в каталоге с образцами мороженого, повторяющийся alt=&quot;Мороженое&quot; у каждой картинки не добавит ценности для пользователя. Но если описать цветовые и вкусовые характеристики, то у картинок появится смысл:</p>
      <pre>{`<img src="strawberry.jpg" alt="Розовое клубничное мороженое с присыпкой сердечками">
<img src="caramel.jpg" alt="Бежевое ванильное мороженое с карамельным соусом">`}
      </pre>
      <p>Хорошим альтернативным текстом для картинки с картой, может стать адрес, который обозначен на этой карте и так далее. Подробнее читайте в «Руководстве по alt-text от слабовидящего веб-разработчика».</p>
      <p>
        <input type="checkbox" id={41} className="checkbox" />
        <label htmlFor={41}>Критическая функциональность сайта работоспособна без JavaScript (использовано прогрессивное улучшение)</label>
      </p><p>Например:</p>
      <p>Все формы являются работоспособными без JavaScript;</p>
      <p>Элементы, вызывающие появление попапов, являются ссылками, ведущими на отдельные страницы. Для выполнения этого требования достаточно указать адрес на страницу (например, writeus.html), на которую будет происходить переход в случае неработоспособности JavaScript. При этом верстать саму страницу необязательно. Пример:
      </p><pre><code>&lt;a class=&quot;btn btn-open-form&quot; href=&quot;form.html&quot;&gt;Открыть форму&lt;/a&gt;</code></pre>
      <p>Интерактивная карта без JavaScript показывает статичную картинку с картой.</p>
      <p />
      <p>
        <input type="checkbox" id={42} className="checkbox" />
        <label htmlFor={42}>При взаимодействии с элементами (наведение, нажатие) ни сам элемент, ни окружающие его блоки не меняют своего положения (если иное не прописано в техническом задании или стайлгайде).</label>
      </p>
      <p>
        <input type="checkbox" id={43} className="checkbox" />
        <label htmlFor={43}>Страницы должны ссылаться друг на друга из главного меню.</label>
      </p><p>Проверьте, что все ссылки ведут на настоящие сайты и не ведут на 404. Для этого тоже есть несколько инструментов. </p>
      <p>На главной не должно быть ссылки на главную.</p>
      <p>
        <input type="checkbox" id={44} className="checkbox" />
        <label htmlFor={44}>Курсор интерактивный на интерактивных элементах и обычный на обычных.</label>
      </p>
      <p>
        <input type="checkbox" id={45} className="checkbox" />
        <label htmlFor={45}>Страница не разъезжается, если включить блокировщик рекламы.</label>
      </p><p>Иногда используют автоматические тесты, которые сравниваются отрендеренный результат кода аля интерфейс с рендер-версией приложения. Фактически, это сравнение скриншотов. Конечно, автотесты можно подготовить и для тестирования интерактивных элементов.</p>
      <p>Инструменты:</p>
      <ul>
        <li>Реальные браузеры и устройства.</li>
        <li>Эмуляторы (BrowserStack, LambdaTest, Browsera, BrowserShots).</li>
      </ul>
      <p />
      <p>
        <input type="checkbox" id={46} className="checkbox" />
        <label htmlFor={46}>Ошибки JavaScript</label>
      </p>
      <p>Если в коде есть ошибки, их будет видно в консоли разработчика. Также там можно обратить внимание на запросы (время и коды ответов) и посмотреть размер загружаемых файлов. И если размер большой, обсудить с разработчиками оптимизацию кода на JavaScript, шрифтов и изображений.</p>
      <p>
        <input type="checkbox" id={47} className="checkbox" />
        <label htmlFor={47}>С локализацией всё в порядке (русская, английская версия).</label>
      </p>
      <p>Если пользователи сайта говорят на разных языках, сайт локализуют — готовят тексты на разных языках и добавляют переключалку с флагами.Но недостаточно проверить перевод текстов в интерфейсе, ошибок и документации — есть ещё ряд нюансов. Например, нужно проверить представление дат и времени, поддерживает ли шрифт локальные символы, и есть ли режим RTL для стран, где текст читается справа налево.</p>
      <p>
        <input type="checkbox" id={48} className="checkbox" />
        <label htmlFor={48}>Производительность сайта</label>
      </p>
      <p>Пользователи уходят, если сайт грузится медленно. Поэтому нужно проверить, что ваш сайт не такой.</p>
      <ul>Что проверять
        <li>Как быстро браузер отобразит страницу?</li>
        <li>Сколько времени занимает доставка ответа от сервера к пользователю?</li>
        <li>Все ли ресурсы загружаются?</li>
        <li>Иногда скорость загрузки зависит от контента, который используется на странице.</li>
      </ul>
      Вот советы, как его оптимизировать.
      <ul>
        <li>Использовать сжатие контента - выбирать подходящие форматы графики и шрифтов.</li>
        <li>Включить серверное и клиентское кэширование</li>
        <li>Избавиться от неиспользуемых данных, которые подгружаются подзапросом. </li>
        <li>Например в приложении 10 библиотек JS, а используется только одна.</li>
        <li>Правильно настроить файлы Cookie</li>
        <li>Хранить статические данные на отдельном CDN-сервере.</li>
      </ul>
    </section>

  );
}
export default SiteChecklist;
