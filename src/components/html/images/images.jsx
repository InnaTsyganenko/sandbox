import React from 'react';

function Images() {

  return (
    <section className="conspect">
      <h1>Изображения</h1>
      <h2>Подключение изображений</h2>
      <p>Для подключения изображений существует тег <code>&lt;img&gt;</code>, для него не требуется закрывающего тега, а путь к картинке задаётся в атрибуте src.</p>
      <div className="hl-5">
        <p>Лицензия CC0 - Creative Common Zero.</p>
        <p>Вы можете копировать, изменять, распространять и исполнять данное произведение, даже в коммерческих целях, не спрашивая разрешения. Но лучше не использовать  фото с людьми, которых можно узнать на картинке или узнаваемый логотип бренда без разрешения владельца на публикацию картинки.</p>
      </div>
      <h4>Сайты с картинками:</h4>
      <p>Unsplash. Поиск по ключевым словам на английском. Есть бесплатный API на Javascript, PHP и Ruby, на котором можно получить картинку сразу обрезанную до нужных размеров.</p>
      <p>Pexels. Помимо картинок есть коллекция видео(если нужно для шапки сайта).</p>
      <p>Pixabay. Картинки + векторные иллюстрации и изображения. Также есть бесплатный API.</p>

      <h2>Форматы изображений</h2>
      <p>Существует несколько основных форматов изображений: JPEG, PNG, SVG и GIF.</p>
      <p>Формат SVG переводится как масштабируемая векторная графика. Качество таких изображений не меняется при изменении размеров, да и вес у них небольшой. Отлично подходит для малоцветных схем, логотипов и иконок. Чаще всего используется в случаях, когда необходимо масштабировать изображение без потерь, изменять цвет элементов изображения, анимировать части изображения. формат SVG подходит если:</p>
      <ul>
        <li>необходимо масштабировать изображение без потерь;</li>
        <li>изменять цвет элементов изображения;</li>
        <li>нужно анимировать части изображения.</li>
      </ul>
      <p>Формат JPEG подходит для фотографий, рисунков с большим количеством разноцветных деталей, изображений с плавным переходом яркости и контраста. При сжатии изображения ухудшается его качество. формат JPEG лучше подходит для:</p>
      <ul>
        <li>полноцветных изображений, фотографий;</li>
        <li>изображений с плавным переходом яркости и контраста;</li>
        <li>рисунков с большим количеством разноцветных деталей.</li>
      </ul>
      <p>При сохранении изображения в формат JPEG можно задавать уровень качества. Это позволяет добиваться снижения веса файла при достаточно хорошем качестве изображения. Однако, если установить уровень качества слишком низким, то появятся артефакты.</p>
      <p>JPEG не поддерживает прозрачность, поэтому изображение в формате JPEG — это всегда прямоугольник. Можно имитировать прозрачность, если в графическом редакторе задать изображению такой же цвет фона, как и у контейнера фотографии.</p>
      <p>Используйте JPEG для размещения фото с наилучшим соотношением &quot;размер файла&quot;/&quot;качество&quot;.</p>
      <p>Формат PNG позволяет сохранять изображения, в которых требуется особенная чёткость. Главная особенность этого формата — поддержка прозрачности. Подходит для изображений с прозрачностью и полупрозрачностью, когда необходима повышенная точность полноцветных изображений и для изображений с резкими переходами цветов. формат PNG подходит для:</p>
      <ul>
        <li>изображений с прозрачностью и полупрозрачностью;</li>
        <li>полноцветных изображений, когда необходима повышенная точность;</li>
        <li>изображений с резкими переходами цветов.</li>
      </ul>
      <p>PNG-8 и PNG-24 это подтипы PNG, а также режимы сохранения в Photoshop. Мы не будем глубоко вдаваться в детали, а разберем типовые особенности.</p>
      <p>PNG-8 по характеристикам схож с форматом GIF. Он хорошо подходит для схем, чертежей, графиков и текста, а также изображений, где мало цветов. Максимальное количество цветов — 256.</p>
      <p>PNG-8, как и GIF, поддерживает прозрачность. Это означает, что пиксель либо полностью прозрачный, либо полностью непрозрачный.</p>
      <p>Если нужно сделать изображение с прозрачностью, то лучше задавать обводку такую же, как цвет фона. В фотошопе при сохранении обводка называется «Matte». Без обводки картинка будет выглядеть «обкусанной». Если фон неоднородный (градиент, 3 блок в мини-браузере), то PNG-8 с обводкой будет смотреться плохо.</p>
      <p>Чем PNG лучше GIF? PNG более современный и свободный формат, а GIF более старый и проприетарный (за его использование могут потребовать деньги). Уровень сжатия, качество и другие характеристики примерно одинаковые, поэтому лучше всегда использовать PNG.</p>

      <h3>Формат PNG-24</h3>
      <p>PNG-24 — отличнейший формат. Он хорошо подходит и для схем-чертежей-графиков-текста, и для сложных многоцветных изображений, так как поддерживает практически неограниченное количество цветов.</p>
      <p>На фотографиях обычно он уступает JPEG по размеру файла, но превосходит по качеству изображения. Но иногда разница по размеру файла настолько некритична, что можно использовать PNG.</p>
      <p>Самый главный плюс PNG-24 — это полноценная поддержка полупрозрачности, которой нет ни в одном другом формате. Поэтому в веб-разработке при вёрстке сложных фонов, графических элементов со сложными тенями и так далее альтернативы PNG-24 просто нет.</p>
      <p>Давным-давно в IE была проблема с поддержкой полупрозрачных PNG, но в более поздних версиях IE (8+), таких проблем нет.</p>
      <p>Формат GIF используется для простейших анимаций. В последнее время GIF-изображения становятся всё менее используемыми и заменяются на другие, более оптимальные форматы.</p>

      <h2>Размеры изображения</h2>
      <p>Для управления шириной или высотой изображения, используются атрибуты width и height. Размеры в этих атрибутах задаются без единиц измерения.</p>
      <p>Если задать только один из размеров, ширину или высоту, то вторую размерность браузер вычислит самостоятельно исходя из пропорций изображения. Если задать картинке одновременно и высоту, и ширину, то браузер может нарушить пропорции исходного изображения.</p>

      <h2>Атрибут alt</h2>
      <p>В случаях, когда картинка не может отобразиться, для того, чтобы было понятно, что на ней изображено, существует альтернативный текст. Также альтернативный текст помогает сайтам оставаться доступными, например, для категории пользователей, которая не имеет возможности видеть картинки.</p>
      <p>Альтернативный текст изображения задаётся с помощью атрибута alt.</p>
      <a href="http://prgssr.ru/development/alternativnyj-tekst-dlya-izobrazhenij.html" target="_blank" rel="noopener noreferrer">Альтернативный текст для изображений</a>

      <h2>Figure и figcaption</h2>
      <p>В галерее селфи каждая маленькая картинка-превьюшка ссылается на отдельную страницу с «фотокарточкой». Эта фотокарточка содержит полноразмерное изображение и его описание. Она достаточно независима, и позже мы сможем вставить её на любую другую страницу блога. В этом случае отлично подойдёт тег <code>&lt;figure&gt;</code>.</p>
      <p>Тег <code>&lt;figure&gt;</code> подходит для любого иллюстративного или демонстрационного материала, которым можно дополнить содержание документа: схемы, графики, примеры кода, таблицы и так далее. При удалении такого материала основное содержание не должно пострадать, иначе это не дополнительный материал и тег <code>&lt;figure&gt;</code> не подходит для его разметки.</p>
      <p>Для разъясняющего комментария к такому иллюстративному материалу существует тег <code>&lt;figcaption&gt;</code>, который размещается первым или последним элементом внутри <code>&lt;figure&gt;</code>.</p>

      <h2>Изображение-ссылка</h2>
      <p>Ссылки можно делать не только с помощью текста, но и с помощью изображений. Для этого нужно обернуть тег <code>&lt;img&gt;</code> в тег <code>&lt;a&gt;</code>.</p>
      <p>Часто ссылки-изображения используются в галереях, когда с уменьшенной версии изображения ставится ссылка на полноразмерную версию картинки или на отдельную страницу с этим изображением и подписью к нему.</p>

      <h2>Тег <code>&lt;picture&gt;</code></h2>
      <p>Служит контейнером для одного или более элементов <code>&lt;source&gt;</code> и одного элемента <code>&lt;img&gt;</code> для обеспечения оптимальной версии изображения для различных размеров экрана.</p>
      <p>Элемент <code>&lt;picture&gt;</code> часто используют для того, чтобы обеспечить HiDPI (Retina)-версию изображений для дисплеев с высоким разрешением, а также для добавления других форматов изображений, не поддерживаемых всеми браузерами.</p>
      <p>С помощью <code>&lt;picture&gt;</code> можно сделать кадрирование (обрезку) изображения.</p>
      <pre>{`<picture>
  <source class="main-nav__logo-img" media="(min-width: 1150px)" srcset="img/logo-desktop.svg">
  <source class="main-nav__logo-img" media="(min-width: 768px)" srcset="img/logo-tablet.svg">
  <img class="main-nav__logo-img" src="img/logo-mobile.svg" alt="Логотип интернет-магазина «Мишка»">
</picture>`}
      </pre>
      <p><a href="https://developer.mozilla.org/ru/docs/Web/HTML/Element/picture" target="_blank" rel="noopener noreferrer">MDN. Элемент <code>&lt;picture&gt;</code></a></p>

      <h2>loading</h2>
      <p>Задаёт поведение браузера при загрузке изображения. Принимает два значения: <span className="hl-8">eager</span> - картинка загружается всегда, независимо от области просмотра и <span className="hl-8">lazy</span> - загрузка откладывается, пока изображение не достигнет области просмотра.</p>
    </section>
  );
}

export default Images;
