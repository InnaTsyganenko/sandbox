import React from 'react';

function TextMarkup() {

  return (
    <section className="conspect">
      <h1>Разметка текста</h1>
      <h2 id="lists">Размечаем списки: <code>&lt;ul&gt;</code> и <code>&lt;ol&gt;</code></h2>
      <h3>Маркированный список</h3>
      <p>Тег <code>&lt;ul&gt;</code> (сокращение от «unordered list»). Непосредственно в теге <code>&lt;ul&gt;</code> могут находиться только теги <code>&lt;li&gt;</code> (сокращение от «list item»), которые обозначают элементы или пункты списка.</p>
      <p>По умолчанию элементы <code>&lt;ul&gt;</code> отмечаются маркерами такого же цвета, как цвет текста.</p>
      <p>Изменить вид маркера списка можно с помощью свойства <span className="hl-8">list-style</span>, возможные значения: <span className="hl-3">circle, disc, square, none.</span></p>

      <h3>Нумерованный список</h3>
      <p>Тег <code>&lt;ol&gt;</code> (сокращение от «ordered list»). В этом списке действительно важно, в каком порядке идут элементы.</p>
      <p>По умолчанию перед элементами <code>&lt;ol&gt;</code> ставится их порядковый номер. У <code>&lt;ol&gt;</code> может быть несколько атрибутов: start, reversed и type.</p>
      <p>Атрибут start меняет стартовое число нумерации пунктов. Может быть отрицательным.</p>
      <p>Атрибут reversed меняет направление нумерации на противоположный. Этот атрибут не требует значения.</p>
      <p>С помощью атрибута <span className="hl-1">type</span> (в html) можно задавать различные типы маркеров: строчные и заглавные латинские буквы или римские цифры.</p>
      <p>Возможные значения этого атрибута:</p>
      <ul>
        <li>1: десятичное число;</li>
        <li>a: буквы латинского алфавита в нижнем регистре;</li>
        <li>A: буквы латинского алфавита в верхнем регистре;</li>
        <li>i: римские цифры в нижнем регистре;</li>
        <li>I: римские цифры в верхнем регистре.</li>
      </ul>
      <p>Или с помощью свойства <span className="hl-8">list-style</span> (в css), возможные значения:</p>
      <ul>
        <li><span className="hl-2">armenian</span> - традиционная армянская нумерация</li>
        <li><span className="hl-2">decimal</span> - арабские числа (1, 2, 3, 4,...)</li>
        <li><span className="hl-2">decimal-leading-zero</span> - арабские числа с нулем впереди для цифр меньше десяти (01, 02, 03,...)</li>
        <li><span className="hl-2">georgian</span> - традиционная грузинская нумерация.</li>
        <li><span className="hl-2">lower-alpha</span> - строчные латинские буквы (a, b, c, d,...)</li>
        <li><span className="hl-2">lower-greek</span> - строчные греческие буквы (α, β, γ, δ,...)</li>
        <li><span className="hl-2">lower-latin</span> - это значение аналогично lower-alpha</li>
        <li><span className="hl-2">lower-roman</span> - римские числа в нижнем регистре (i, ii, iii, iv, v,...)</li>
        <li><span className="hl-2">upper-alpha</span> - заглавные латинские буквы (A, B, C, D,...)</li>
        <li><span className="hl-2">upper-latin</span> - это значение аналогично upper-alpha</li>
        <li><span className="hl-2">upper-roman</span> - римские числа в верхнем регистре (I, II, III, IV, V,...)</li>
        <li><span className="hl-2">none</span> - отменяет маркеры для списка</li>
      </ul>
      <p>Типовые ошибки: объединять в список неоднородные элементы и неравноправные элементы. Использовать что-то, кроме <code>&lt;li&gt;</code>, в качестве дочерних элементов списка. Неправильная разметка вложенных списков.</p>
      <p>Ссылки в навигации по сайту, перечень услуг, предоставляемых на сайте, — все эти элементы следует объединять в списки, поскольку они однотипные.</p>
      <p>Корзину пользователя можно тоже считать списком, который включает всего один элемент.</p>
      <p>К примеру, на макете ниже все выделенные элементы выполняют разные функции. Единственное, что их объединяет — визуальное расположение, а значит, эти элементы не могут быть объединены в список.</p>
      <p>Пример несписков на макете:</p>
      <img src="/img/not-list.png" alt="Неравноправные элементы - меню, корзина, поиск и кнопка авторизации" width="600px" height="50px"></img>

      <h2>Список описаний</h2>
      <p>Тег <code>&lt;dl&gt;</code> (сокращение от «description list»). Список описаний используется  служит контейнером для списка пар терминов (определяемых элементом <code>&lt;dt&gt;</code>) и их описаний (определяемых элементами <code>&lt;dd&gt;</code>). Этот элемент обычно используют при создании глоссария, для отображения метаданных (списка пар ключ-значение), для описания характеристик товара и других.</p>
      <p>Он создаётся с помощью трёх тегов:</p>
      <ul>
        <li><code>&lt;dl&gt;</code> обозначает сам список описаний;</li>
        <li><code>&lt;dt&gt;</code> (сокращение от «description term») обозначает термин;</li>
        <li> <code>&lt;dd&gt;</code> (сокращение от «description definition») обозначает описание или определение.</li>
      </ul>
      <p>Теги <code>&lt;dt&gt;</code> и <code>&lt;dd&gt;</code> пишутся внутри <code>&lt;dl&gt;</code>. Каждый список <code>&lt;dl&gt;</code> может содержать один или несколько терминов и одно или несколько описаний для каждого термина.</p>
      <p>По умолчанию браузер добавляет небольшой отступ слева от определений.</p>
      <p>Разберём пример использования тега <code>&lt;dl&gt;</code> в типичной карточке товара. Технические данные о модели перфоратора можно представить как набор пар: параметр и значение. И использовать в этом случае теги <code>&lt;dl&gt;</code> — <code>&lt;dt&gt;</code> — <code>&lt;dd&gt;</code>.</p>
      <p><span className="hl-7">Для подобных блоков также можно использовать простейшие таблицы, в которых параметр связан лишь с одним значением.</span></p>

      <h2>Преформатированный текст и код</h2>
      <p>Тег <code>&lt;pre&gt;</code> (сокращение от «preformatted text»). Используется для отображения примеров кода, также применяется для отображения картинок ASCII Art. Браузер сохраняет и отображает все пробелы и переносы, которые есть внутри тега &lt;pre&gt;</p>
      <p>Тег <code>&lt;code&gt;</code>. Используется для обозначения фрагментов кода. С его помощью размечается любой фрагмент текста, который распознается компьютером: код программы, разметки, название файла и так далее. Обычно браузеры отображают текст в теге <code>&lt;code&gt;</code> моноширинным шрифтом.</p>

      <h2>Цитаты</h2>
      <h3>Небольшие цитаты</h3>
      <p>Тег <code>&lt;q&gt;</code> (сокращение от «quote»). Предназначен для выделения цитат внутри предложения. Текст внутри тега браузер автоматически обрамляет кавычками, поэтому добавлять кавычки вручную не нужно. Если известен интернет-адрес цитаты, то его можно указать в атрибуте cite:</p>
      <p>В спецификации говорится: <code>&lt;q cite=&quot;https://www.w3.org/TR/html52/&quot;&gt;</code>The q element represents some phrasing content quoted from another source<code>&lt;/q&gt;</code>.</p>

      <h3>Источник цитат</h3>
      <p>Тег <code>&lt;cite&gt;</code>. В нём можно указывать помимо адреса источника цитаты ещё и название произведения, откуда цитируется текст, а также имя автора или организации, чей текст цитируется. Содержимое <code>&lt;cite&gt;</code> в браузере выделяется курсивом.</p>
      <p><span className="hl-2">&lt;p&gt;По словам &lt;cite&gt;Чарльза Буковски&lt;/cite&gt; — &lt;q&gt;Интеллектуал о простой вещи говорит сложно — художник сложную вещь описывает простыми словами.&lt;/q&gt;&lt;/p&gt;</span></p>
      <p>Тег <code>&lt;cite&gt;</code> может быть самостоятельным и не привязываться к цитате: <code>&lt;p&gt;</code>Какой доктор ваш любимый (в сериале <code>&lt;cite&gt;</code>Доктор Кто<code>&lt;/cite&gt;</code>)?<code>&lt;/p&gt;</code></p>

      <h3>Длинные цитаты</h3>
      <p>Тег <code>&lt;blockquote&gt;</code>. Предназначен для выделения длинных цитат, которые могут состоять из нескольких абзацев. Тег выделяет цитату не как фрагмент текста в предложении, а как отдельный блок текста с отступами.</p>
      <pre>{`<blockquote>
  <p>Ум ценится дорого, когда дешевеет сила.<code></p>
  <cite></code>Джейсон Стэтхэм<code></cite>
</blockquote>`}
      </pre>
      <p>В браузере контенту тега <code>&lt;blockquote&gt;</code> обычно добавляется дополнительный отступ слева и справа.</p>

      <h2>Разметка фрагментов текста</h2>
      <h3>Символы-мнемоники</h3>
      <p>Это особые строки, которые начинаются с амперсанда (&) и заканчиваются точкой с запятой (;). Например, знак меньше на страницу можно вставить мнемоникой &amp;lt; (less than), а знак больше мнемоникой &amp;gt; (greater than): Некоторые символы в HTML зарезервированы, то есть браузер считает их HTML-кодом. Например, любой текст после знака меньше (&lt;) браузер будет пытаться интерпретировать как тег и на странице не отобразит. Чтобы использовать специальные символы в тексте страницы как обычные символы их нужно заменить на символы-мнемоники.</p>

      <h3>Перенос строк</h3>
      <p>Тег <code>&lt;br&gt;</code> (сокращение от «line break»). Применяется, чтобы вставить в текст перенос строки, не создавая при этом абзац. Например, при разметке стихов или текстов песен.</p>

      <h3>Верхний и нижний индексы</h3>
      <p>Теги <code>&lt;sup&gt;</code> и <code>&lt;sub&gt;</code>. Названия образованы от слов «superscript» и «subscript». Тег <code>&lt;sup&gt;</code> отображает текст в виде верхнего индекса, а <code>&lt;sub&gt;</code> отображает текст в виде нижнего индекса. Их используют для указания единиц измерения или для написания простых формул:</p>
      <pre>{`20м<sup>2</sup>
H<sub>2</sub>O
X<sup>3</sup>+X<sup>2</sup>=1`}
      </pre>
      <p>Для создания более сложных формул, например, e<sup>x</sup><sup>2</sup> или у<sup>x<sub>n+1</sub></sup>, теги <code>&lt;sup&gt;</code> и <code>&lt;sub&gt;</code> можно использовать внутри друг друга.</p>
      <p><span className="hl-3">Если вам нужно вставить очень сложную формулу в HTML-документ, лучше воспользоваться специальным языком разметки MathML.</span></p>

      <h2>Дата и время</h2>
      <p>Тег <code>&lt;time&gt;</code>. С помощью него можно описывать даты одновременно и для человека, и для машины. Для указания даты в машиночитаемом формате ISO 8601 существует атрибут datetime и выглядит так:</p>
      <pre>{`<time datetime="2016-11-18T09:54">09:54 утра</time></code>
<code><time datetime="2015-11-18">18 ноября 2015</time></code>
<code><time datetime="2018-09-23">>в прошлую субботу</time></code>
<code><time datetime="2017-04-20">вчера</time>`}
      </pre>
      <p>Браузер отображает только содержимое тега, а содержимое datetime не отображается.</p>

      <h3>Акцентирование внимания</h3>
      <p>Теги <code>&lt;em&gt;</code> и <code>&lt;i&gt;</code>. Названия образованы от слов «emphasis» и «italic». Предназначены для акцентирования внимания на слово или фразу. Визуально оба тега одинаковы, они выделяют текст курсивом.</p>
      <p>Тег <code>&lt;em&gt;</code> определяет текст, на который сделан особый акцент, меняющий смысл предложения.</p>
      <pre>{'Я <em>просто обожаю</em> холодные зимние дни!'}
      </pre>
      <p>Тег <code>&lt;i&gt;</code> применяется для обозначения текста, который отличается от окружающего текста, но не является более важным. Например, в <code>&lt;i&gt;</code> можно заключать названия, термины, иностранные слова. Также в этот тег можно обернуть мысли героя. В речи такой текст обычно выделяется интонационно:</p>
      <pre>{'Он взглянул в окно и подумал — <i>такого просто не может быть</i>!'}
      </pre>

      <h3>Выделение и придание важности</h3>
      <p>Теги <code>&lt;strong&gt;</code> и <code>&lt;b&gt;</code>. Название <code>&lt;b&gt;</code> образовано от слова «bold». Отображаются оба тега одинаково, они выделяют текст жирным.</p>
      <p>Тег <code>&lt;strong&gt;</code> указывает на важность отмеченного текста. Он может использоваться для выделения предупреждений или части документа, которую пользователь должен увидеть раньше остального. При этом обозначение части текста тегом <code>&lt;strong&gt;</code> не должно изменять смысла предложения.</p>
      <p>Тег <code>&lt;b&gt;</code> предназначен для выделения текста с целью привлечения к нему внимания, но без придания ему особой важности. Использовать его нужно только в случае, когда остальные теги выделения не подходят. Типичный пример — выделение вводного предложения статьи.</p>
      <p>Лучше всего отличия этих тегов будут заметны людям, которые используют средства доступности, в частности, слепым и слабовидящим. Скринридер при чтении сайта будет выделять слова с тегом <code>&lt;strong&gt;</code> интонационно, в отличие от простого выделения с помощью <code>&lt;b&gt;</code>.</p>
      <p>То же самое касается тегов <code>&lt;em&gt;</code> и <code>&lt;i&gt;</code>. Тег <code>&lt;em&gt;</code> «читалка» будет выделять интонацией.</p>

      <h3>Описание изменений</h3>
      <p>Теги <code>&lt;del&gt;</code> и <code>&lt;ins&gt;</code>. Названия тегов образованы от слов «delete» и «insert». Предназначены для описания изменений в документе.</p>
      <p>Тег <code>&lt;del&gt;</code> выделяет текст, который был удалён в новой версии документа. В браузере этот текст перечёркивается.</p>
      <p>Тег <code>&lt;ins&gt;</code> выделяет текст, который был добавлен в новой версии документа. В браузере этот текст подчёркивается.</p>
      <p>Атрибут datetime предназначен не для людей, а для компьютеров, поэтому дату и время там пишут в стандартизованном формате. При такой разметке программам легче разбирать документы и анализировать, когда произошли те или иные изменения.</p>

      <h2>Разделение контента</h2>
      <p>Теги <code>&lt;div&gt;</code> и <code>&lt;span&gt;</code>. Это «чистые» элементы, и обычно они отлично подходят в качестве обёртки для стилизации или группировки других элементов. Использовать эти теги рекомендуется в тех случаях, если более подходящих семантических тегов не нашлось.</p>
      <p>Тег <code>&lt;div&gt;</code> используется для группировки структурных элементов или в качестве вспомогательных контейнеров для создания нужной раскладки.</p>
      <p>Тег <code>&lt;span&gt;</code> используется для группировки текстовых элементов, выделения отдельных слов или фраз внутри абзацев, пунктов списка и так далее.</p>
      <p>В случае c <code>&lt;dl&gt;</code> не должно находиться не обёрнутых в <code>&lt;div&gt;</code> пунктов списка. Мы либо оборачиваем все элементы, либо оставляем все теги <code>&lt;dt&gt;</code> и <code>&lt;dd&gt;</code> без обёрток. Смешение обёрнутых и не обёрнутых в <code>&lt;div&gt;</code> определений внутри одного списка считается ошибкой.</p>
      <p>Нужен специальный тег, который просто добавляет перенос строки внутри абзаца. Для этого в HTML предусмотрен одиночный тег <code>&lt;br&gt;</code> (сокращение от «line break»).</p>
    </section>
  );
}
export default TextMarkup;
